//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlowScriptEnginePPD.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FlowScriptEnginePPD.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   現在のBPMを取得、設定します。TargetBPMにも設定されます。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string BPM_CurrentBPM {
            get {
                return ResourceManager.GetString("BPM_CurrentBPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のBPMを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string BPM_SetCurrentBPM {
            get {
                return ResourceManager.GetString("BPM_SetCurrentBPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最終的なBPMを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string BPM_SetTargetBPM {
            get {
                return ResourceManager.GetString("BPM_SetTargetBPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   BPMを変更します。CurrentBPMとTargetBPMが異なる場合毎フレーム1ずつ差がなくなります に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string BPM_Summary {
            get {
                return ResourceManager.GetString("BPM_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最終的なBPMを取得、設定します。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string BPM_TargetBPM {
            get {
                return ResourceManager.GetString("BPM_TargetBPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   インデックスを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ChildAt_Index {
            get {
                return ResourceManager.GetString("ChildAt_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   親要素を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ChildAt_Parent {
            get {
                return ResourceManager.GetString("ChildAt_Parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ParentのIndexにある子要素を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ChildAt_Summary {
            get {
                return ResourceManager.GetString("ChildAt_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   子要素を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ChildAt_Value {
            get {
                return ResourceManager.GetString("ChildAt_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_AverageGrayScale_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_AverageGrayScale_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   平均グレースケールフィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_AverageGrayScale_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_AverageGrayScale_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_AverageGrayScale_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_AverageGrayScale_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Brightness_SetScale_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_Brightness_SetScale_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スケールを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Brightness_SetScale_Scale {
            get {
                return ResourceManager.GetString("ColorFilter_Brightness_SetScale_Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スケールを変更します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Brightness_SetScale_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_Brightness_SetScale_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Brightness_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_Brightness_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スケールを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Brightness_Value_Scale {
            get {
                return ResourceManager.GetString("ColorFilter_Brightness_Value_Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   輝度フィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Brightness_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_Brightness_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Brightness_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_Brightness_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Color_SetColor_Color {
            get {
                return ResourceManager.GetString("ColorFilter_Color_SetColor_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Color_SetColor_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_Color_SetColor_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーを変更します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Color_SetColor_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_Color_SetColor_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Color_Value_Color {
            get {
                return ResourceManager.GetString("ColorFilter_Color_Value_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Color_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_Color_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーフィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Color_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_Color_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Color_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_Color_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_GreenGrayScale_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_GreenGrayScale_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   グリーングレースケールフィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_GreenGrayScale_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_GreenGrayScale_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_GreenGrayScale_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_GreenGrayScale_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_HDTVGrayScale_SetGammaCorrection_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_HDTVGrayScale_SetGammaCorrection_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ガンマ補正を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_HDTVGrayScale_SetGammaCorrection_GammaCorrection {
            get {
                return ResourceManager.GetString("ColorFilter_HDTVGrayScale_SetGammaCorrection_GammaCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ガンマ補正を変更します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_HDTVGrayScale_SetGammaCorrection_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_HDTVGrayScale_SetGammaCorrection_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_HDTVGrayScale_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_HDTVGrayScale_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ガンマ補正を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_HDTVGrayScale_Value_GammaCorrection {
            get {
                return ResourceManager.GetString("ColorFilter_HDTVGrayScale_Value_GammaCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   HDTVグレースケールフィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_HDTVGrayScale_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_HDTVGrayScale_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_HDTVGrayScale_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_HDTVGrayScale_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Hue_SetRotation_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_Hue_SetRotation_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   回転を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Hue_SetRotation_Rotation {
            get {
                return ResourceManager.GetString("ColorFilter_Hue_SetRotation_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   回転を変更します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Hue_SetRotation_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_Hue_SetRotation_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Hue_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_Hue_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   回転を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Hue_Value_Rotation {
            get {
                return ResourceManager.GetString("ColorFilter_Hue_Value_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   色相フィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Hue_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_Hue_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Hue_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_Hue_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Invert_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_Invert_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   反転フィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Invert_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_Invert_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Invert_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_Invert_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_MaxGrayScale_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_MaxGrayScale_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最大グレースケールフィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_MaxGrayScale_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_MaxGrayScale_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_MaxGrayScale_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_MaxGrayScale_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_MedianGrayScale_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_MedianGrayScale_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   中央値グレースケールフィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_MedianGrayScale_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_MedianGrayScale_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_MedianGrayScale_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_MedianGrayScale_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_MiddleGrayScale_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_MiddleGrayScale_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   中間値グレースケールフィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_MiddleGrayScale_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_MiddleGrayScale_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_MiddleGrayScale_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_MiddleGrayScale_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_NTSCGrayScale_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_NTSCGrayScale_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   NTSCグレースケールフィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_NTSCGrayScale_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_NTSCGrayScale_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_NTSCGrayScale_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_NTSCGrayScale_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Saturation_SetScale_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_Saturation_SetScale_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スケールを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Saturation_SetScale_Scale {
            get {
                return ResourceManager.GetString("ColorFilter_Saturation_SetScale_Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スケールを変更します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Saturation_SetScale_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_Saturation_SetScale_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Saturation_Value_Filter {
            get {
                return ResourceManager.GetString("ColorFilter_Saturation_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スケールを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Saturation_Value_Scale {
            get {
                return ResourceManager.GetString("ColorFilter_Saturation_Value_Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   彩度フィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Saturation_Value_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_Saturation_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_Saturation_Value_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_Saturation_Value_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_SetWeight_ColorFilter {
            get {
                return ResourceManager.GetString("ColorFilter_SetWeight_ColorFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを変更します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_SetWeight_Summary {
            get {
                return ResourceManager.GetString("ColorFilter_SetWeight_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ウェイトを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ColorFilter_SetWeight_Weight {
            get {
                return ResourceManager.GetString("ColorFilter_SetWeight_Weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   子要素です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ContainsChild_Child {
            get {
                return ResourceManager.GetString("ContainsChild_Child", resourceCulture);
            }
        }
        
        /// <summary>
        ///   親要素です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ContainsChild_Parent {
            get {
                return ResourceManager.GetString("ContainsChild_Parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ParentがChildを子要素として含むかどうかを返します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ContainsChild_Summary {
            get {
                return ResourceManager.GetString("ContainsChild_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   含むかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ContainsChild_Value {
            get {
                return ResourceManager.GetString("ContainsChild_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のボタンです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DisableInput_Button {
            get {
                return ResourceManager.GetString("DisableInput_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   無効にするかどうかです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DisableInput_IsDisabled {
            get {
                return ResourceManager.GetString("DisableInput_IsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定の入力ボタンを無効化します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DisableInput_Summary {
            get {
                return ResourceManager.GetString("DisableInput_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   エフェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Object {
            get {
                return ResourceManager.GetString("Effect_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   エフェクトを一時停止します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Pause_Summary {
            get {
                return ResourceManager.GetString("Effect_Pause_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   再生タイプを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Play_PlayType {
            get {
                return ResourceManager.GetString("Effect_Play_PlayType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   エフェクトを再生します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Play_Summary {
            get {
                return ResourceManager.GetString("Effect_Play_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プールから取り出したエフェクトを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Pool_Use_Object {
            get {
                return ResourceManager.GetString("Effect_Pool_Use_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プールを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Pool_Use_Pool {
            get {
                return ResourceManager.GetString("Effect_Pool_Use_Pool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   位置を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Pool_Use_Position {
            get {
                return ResourceManager.GetString("Effect_Pool_Use_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プールからエフェクトを取り出します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Pool_Use_Summary {
            get {
                return ResourceManager.GetString("Effect_Pool_Use_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プールの初期エフェクト数を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Pool_Value_Count {
            get {
                return ResourceManager.GetString("Effect_Pool_Value_Count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プールが扱うエフェクトのパスを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Pool_Value_Path {
            get {
                return ResourceManager.GetString("Effect_Pool_Value_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   作成したプールを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Pool_Value_Pool {
            get {
                return ResourceManager.GetString("Effect_Pool_Value_Pool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プールを作成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Pool_Value_Summary {
            get {
                return ResourceManager.GetString("Effect_Pool_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   エフェクトを停止します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Stop_Summary {
            get {
                return ResourceManager.GetString("Effect_Stop_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Value_In {
            get {
                return ResourceManager.GetString("Effect_Value_In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   生成されたオブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Value_Object {
            get {
                return ResourceManager.GetString("Effect_Value_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   エフェクトのパスを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Value_Path {
            get {
                return ResourceManager.GetString("Effect_Value_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   エフェクトの再生状態を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Value_PlayState {
            get {
                return ResourceManager.GetString("Effect_Value_PlayState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   初期位置を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Value_Position {
            get {
                return ResourceManager.GetString("Effect_Value_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   エフェクト表示オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Effect_Value_Summary {
            get {
                return ResourceManager.GetString("Effect_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ログインしている場合にユーザーのアカウントIDを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_AccountId {
            get {
                return ResourceManager.GetString("Environment_Value_AccountId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しのマークを同じ色にする機能を無効化するかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_DrawSameColorAtSameTimingDisabled {
            get {
                return ResourceManager.GetString("Environment_Value_DrawSameColorAtSameTimingDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フォントサイズを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_FontSize {
            get {
                return ResourceManager.GetString("Environment_Value_FontSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のFPSを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_FPS {
            get {
                return ResourceManager.GetString("Environment_Value_FPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ログインしているかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_IsLogined {
            get {
                return ResourceManager.GetString("Environment_Value_IsLogined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最後の描画でかかった時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_LastDrawTime {
            get {
                return ResourceManager.GetString("Environment_Value_LastDrawTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最後の更新でかかった時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_LastUpdateTime {
            get {
                return ResourceManager.GetString("Environment_Value_LastUpdateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   モニタ遅延の設定値を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_MonitorLatency {
            get {
                return ResourceManager.GetString("Environment_Value_MonitorLatency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   動画遅延の設定値を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_MovieLatency {
            get {
                return ResourceManager.GetString("Environment_Value_MovieLatency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   環境の変数の値を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_Summary {
            get {
                return ResourceManager.GetString("Environment_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ログインしている場合にユーザー名を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_UserName {
            get {
                return ResourceManager.GetString("Environment_Value_UserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のウィンドウの高さを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_WindowHeight {
            get {
                return ResourceManager.GetString("Environment_Value_WindowHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のウィンドウの幅を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Environment_Value_WindowWidth {
            get {
                return ResourceManager.GetString("Environment_Value_WindowWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの評価を取得、設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EvaluateType_Value_Summary {
            get {
                return ResourceManager.GetString("EvaluateType_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの評価を取得、設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EvaluateType_Value_Value {
            get {
                return ResourceManager.GetString("EvaluateType_Value_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のボタンを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_SetKeepPlaying_Button {
            get {
                return ResourceManager.GetString("EventManager_SetKeepPlaying_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   押している間のみサウンドを再生するかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_SetKeepPlaying_KeepPlaying {
            get {
                return ResourceManager.GetString("EventManager_SetKeepPlaying_KeepPlaying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   押している間のみサウンドを再生するかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_SetKeepPlaying_Summary {
            get {
                return ResourceManager.GetString("EventManager_SetKeepPlaying_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のボタンを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_SetReleaseSound_Button {
            get {
                return ResourceManager.GetString("EventManager_SetReleaseSound_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   長押しリリース時にサウンドを再生するかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_SetReleaseSound_ReleaseSound {
            get {
                return ResourceManager.GetString("EventManager_SetReleaseSound_ReleaseSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   長押しリリース時にサウンドを再生するかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_SetReleaseSound_Summary {
            get {
                return ResourceManager.GetString("EventManager_SetReleaseSound_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のボタンを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_SetVolumePercent_Button {
            get {
                return ResourceManager.GetString("EventManager_SetVolumePercent_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ボタンを押したときのサウンドの音量を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_SetVolumePercent_Summary {
            get {
                return ResourceManager.GetString("EventManager_SetVolumePercent_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   音量をパーセントで設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_SetVolumePercent_VolumePercent {
            get {
                return ResourceManager.GetString("EventManager_SetVolumePercent_VolumePercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ボタンを押している間のみサウンドを再生するかどうかの一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_Value_KeepPlayings {
            get {
                return ResourceManager.GetString("EventManager_Value_KeepPlayings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   長押しリリース時にサウンドを再生するかどうかの一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_Value_ReleaseSounds {
            get {
                return ResourceManager.GetString("EventManager_Value_ReleaseSounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   イベントマネージャーの現在の設定を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_Value_Summary {
            get {
                return ResourceManager.GetString("EventManager_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   音量の一覧(パーセント)を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EventManager_Value_VolumePercents {
            get {
                return ResourceManager.GetString("EventManager_Value_VolumePercents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   毎フレーム実行されるイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EveryFrame_Out {
            get {
                return ResourceManager.GetString("EveryFrame_Out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   毎フレーム実行されます に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string EveryFrame_Summary {
            get {
                return ResourceManager.GetString("EveryFrame_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   失敗したときに呼ばれるイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Execute_Failed {
            get {
                return ResourceManager.GetString("Execute_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   実行します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Execute_In {
            get {
                return ResourceManager.GetString("Execute_In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   成功したときに呼ばれるイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Execute_Success {
            get {
                return ResourceManager.GetString("Execute_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   DisableInputの制限を無視して有効化します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ForceEnableInput_Summary {
            get {
                return ResourceManager.GetString("ForceEnableInput_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   増やす数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_GainCurrentCombo_Gain {
            get {
                return ResourceManager.GetString("GameResult_GainCurrentCombo_Gain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のコンボを増やします に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_GainCurrentCombo_Summary {
            get {
                return ResourceManager.GetString("GameResult_GainCurrentCombo_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   増やす数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_GainCurrentLife_Gain {
            get {
                return ResourceManager.GetString("GameResult_GainCurrentLife_Gain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のライフを増やします に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_GainCurrentLife_Summary {
            get {
                return ResourceManager.GetString("GameResult_GainCurrentLife_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   増やす数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_GainCurrentScore_Gain {
            get {
                return ResourceManager.GetString("GameResult_GainCurrentScore_Gain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のスコアを増やします に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_GainCurrentScore_Summary {
            get {
                return ResourceManager.GetString("GameResult_GainCurrentScore_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   増やす評価です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_GainEvaluateCount_Evaluate {
            get {
                return ResourceManager.GetString("GameResult_GainEvaluateCount_Evaluate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   増やす数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_GainEvaluateCount_Gain {
            get {
                return ResourceManager.GetString("GameResult_GainEvaluateCount_Gain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   評価の数を増やします に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_GainEvaluateCount_Summary {
            get {
                return ResourceManager.GetString("GameResult_GainEvaluateCount_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ライフが0になって終了する処理を一時的に保留します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_SetSuspendFinish_Summary {
            get {
                return ResourceManager.GetString("GameResult_SetSuspendFinish_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   保留するかどうかです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_SetSuspendFinish_Value {
            get {
                return ResourceManager.GetString("GameResult_SetSuspendFinish_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   COOLのカウントを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_CoolCount {
            get {
                return ResourceManager.GetString("GameResult_Value_CoolCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のコンボ数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_CurrentCombo {
            get {
                return ResourceManager.GetString("GameResult_Value_CurrentCombo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のライフを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_CurrentLife {
            get {
                return ResourceManager.GetString("GameResult_Value_CurrentLife", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のスコアを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_CurrentScore {
            get {
                return ResourceManager.GetString("GameResult_Value_CurrentScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   死んだときのイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_Died {
            get {
                return ResourceManager.GetString("GameResult_Value_Died", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドボーナスの合計値の予測値を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_ExpectedTotalSlideBonus {
            get {
                return ResourceManager.GetString("GameResult_Value_ExpectedTotalSlideBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   GOODのカウントを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_GoodCount {
            get {
                return ResourceManager.GetString("GameResult_Value_GoodCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ホールドボーナスの合計を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_HoldBonus {
            get {
                return ResourceManager.GetString("GameResult_Value_HoldBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   リプレイしているかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_IsReplaying {
            get {
                return ResourceManager.GetString("GameResult_Value_IsReplaying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   リトライしているかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_IsRetrying {
            get {
                return ResourceManager.GetString("GameResult_Value_IsRetrying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最大のコンボ数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_MaxCombo {
            get {
                return ResourceManager.GetString("GameResult_Value_MaxCombo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ライフの最大値を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_MaxLife {
            get {
                return ResourceManager.GetString("GameResult_Value_MaxLife", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ライフの最小値を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_MinLife {
            get {
                return ResourceManager.GetString("GameResult_Value_MinLife", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SADのカウントを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_SadCount {
            get {
                return ResourceManager.GetString("GameResult_Value_SadCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SAFEのカウントを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_SafeCount {
            get {
                return ResourceManager.GetString("GameResult_Value_SafeCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドボーナスを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_SlideBonus {
            get {
                return ResourceManager.GetString("GameResult_Value_SlideBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ゲームの状態を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_Summary {
            get {
                return ResourceManager.GetString("GameResult_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   WORSTをカウントを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GameResult_Value_WorstCount {
            get {
                return ResourceManager.GetString("GameResult_Value_WorstCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   子要素です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_AddChild_Child {
            get {
                return ResourceManager.GetString("Graphics_AddChild_Child", resourceCulture);
            }
        }
        
        /// <summary>
        ///   親要素です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_AddChild_Parent {
            get {
                return ResourceManager.GetString("Graphics_AddChild_Parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ParentにChildを追加します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_AddChild_Summary {
            get {
                return ResourceManager.GetString("Graphics_AddChild_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_AddColorFilter_ColorFilter {
            get {
                return ResourceManager.GetString("Graphics_AddColorFilter_ColorFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーフィルターを追加します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_AddColorFilter_Summary {
            get {
                return ResourceManager.GetString("Graphics_AddColorFilter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクリーンフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_AddPostScreenFilter_ScreenFilter {
            get {
                return ResourceManager.GetString("Graphics_AddPostScreenFilter_ScreenFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポストスクリーンフィルターを追加します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_AddPostScreenFilter_Summary {
            get {
                return ResourceManager.GetString("Graphics_AddPostScreenFilter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクリーンフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_AddPreScreenFilter_ScreenFilter {
            get {
                return ResourceManager.GetString("Graphics_AddPreScreenFilter_ScreenFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プレスクリーンフィルターを追加します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_AddPreScreenFilter_Summary {
            get {
                return ResourceManager.GetString("Graphics_AddPreScreenFilter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   取得する描画オブジェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_ChildrenCount_Object {
            get {
                return ResourceManager.GetString("Graphics_ChildrenCount_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   子要素の数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_ChildrenCount_Summary {
            get {
                return ResourceManager.GetString("Graphics_ChildrenCount_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   子要素子の数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_ChildrenCount_Value {
            get {
                return ResourceManager.GetString("Graphics_ChildrenCount_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象の描画オブジェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_ClearChildren_Object {
            get {
                return ResourceManager.GetString("Graphics_ClearChildren_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   子要素を全て取り除きます に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_ClearChildren_Summary {
            get {
                return ResourceManager.GetString("Graphics_ClearChildren_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   コンボのレイヤーを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_GameInterface_ComboLayer {
            get {
                return ResourceManager.GetString("Graphics_GameInterface_ComboLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのコネクトのレイヤーを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_GameInterface_ConnectLayer {
            get {
                return ResourceManager.GetString("Graphics_GameInterface_ConnectLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ホールドのレイヤーを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_GameInterface_HoldLayer {
            get {
                return ResourceManager.GetString("Graphics_GameInterface_HoldLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのエフェクトのレイヤーを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_GameInterface_MarkEffectLayer {
            get {
                return ResourceManager.GetString("Graphics_GameInterface_MarkEffectLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのレイヤーを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_GameInterface_MarkLayer {
            get {
                return ResourceManager.GetString("Graphics_GameInterface_MarkLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドレイヤーを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_GameInterface_SlideLayer {
            get {
                return ResourceManager.GetString("Graphics_GameInterface_SlideLayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ゲームのインターフェースを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_GameInterface_Summary {
            get {
                return ResourceManager.GetString("Graphics_GameInterface_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   インターフェースの描画オブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_GameInterface_Value {
            get {
                return ResourceManager.GetString("Graphics_GameInterface_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   子です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertChild_Child {
            get {
                return ResourceManager.GetString("Graphics_InsertChild_Child", resourceCulture);
            }
        }
        
        /// <summary>
        ///   インデックスです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertChild_Index {
            get {
                return ResourceManager.GetString("Graphics_InsertChild_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   親です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertChild_Parent {
            get {
                return ResourceManager.GetString("Graphics_InsertChild_Parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Parentの指定したIndexにChildを追加します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertChild_Summary {
            get {
                return ResourceManager.GetString("Graphics_InsertChild_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertColorFilter_ColorFilter {
            get {
                return ResourceManager.GetString("Graphics_InsertColorFilter_ColorFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   挿入するインデックスを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertColorFilter_Index {
            get {
                return ResourceManager.GetString("Graphics_InsertColorFilter_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーフィルターを挿入します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertColorFilter_Summary {
            get {
                return ResourceManager.GetString("Graphics_InsertColorFilter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   挿入するインデックスを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertPostScreenFilter_Index {
            get {
                return ResourceManager.GetString("Graphics_InsertPostScreenFilter_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクリーンフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertPostScreenFilter_ScreenFilter {
            get {
                return ResourceManager.GetString("Graphics_InsertPostScreenFilter_ScreenFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポストスクリーンフィルターを挿入します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertPostScreenFilter_Summary {
            get {
                return ResourceManager.GetString("Graphics_InsertPostScreenFilter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   挿入するインデックスを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertPreScreenFilter_Index {
            get {
                return ResourceManager.GetString("Graphics_InsertPreScreenFilter_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクリーンフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertPreScreenFilter_ScreenFilter {
            get {
                return ResourceManager.GetString("Graphics_InsertPreScreenFilter_ScreenFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プレスクリーンフィルターを挿入します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_InsertPreScreenFilter_Summary {
            get {
                return ResourceManager.GetString("Graphics_InsertPreScreenFilter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   動画の長さを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Length_Summary {
            get {
                return ResourceManager.GetString("Graphics_Movie_Length_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   動画の長さです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Length_Value {
            get {
                return ResourceManager.GetString("Graphics_Movie_Length_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   動画を一時停止します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Pause_Summary {
            get {
                return ResourceManager.GetString("Graphics_Movie_Pause_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   動画を再生します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Play_Summary {
            get {
                return ResourceManager.GetString("Graphics_Movie_Play_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   動画の位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Position_Summary {
            get {
                return ResourceManager.GetString("Graphics_Movie_Position_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   動画の位置です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Position_Value {
            get {
                return ResourceManager.GetString("Graphics_Movie_Position_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   動画をシークします に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Seek_Summary {
            get {
                return ResourceManager.GetString("Graphics_Movie_Seek_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   シーク後の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Seek_Time {
            get {
                return ResourceManager.GetString("Graphics_Movie_Seek_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   動画の音量を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_SetVolume_Summary {
            get {
                return ResourceManager.GetString("Graphics_Movie_SetVolume_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   音量を設定します(最大0, 最小-10000) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_SetVolume_Volume {
            get {
                return ResourceManager.GetString("Graphics_Movie_SetVolume_Volume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   動作を停止します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Stop_Summary {
            get {
                return ResourceManager.GetString("Graphics_Movie_Stop_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ボリュームを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Volume_Summary {
            get {
                return ResourceManager.GetString("Graphics_Movie_Volume_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ボリュームです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Movie_Volume_Value {
            get {
                return ResourceManager.GetString("Graphics_Movie_Volume_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象の描画オブジェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Object {
            get {
                return ResourceManager.GetString("Graphics_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   色を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_SetColor_Color {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_SetColor_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   設定対象の矩形オブジェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_SetColor_Object {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_SetColor_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   矩形の色を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_SetColor_Summary {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_SetColor_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   高さを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_SetHeight_Height {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_SetHeight_Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   設定対象の矩形オブジェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_SetHeight_Object {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_SetHeight_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   矩形の高さを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_SetHeight_Summary {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_SetHeight_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   設定対象の矩形オブジェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_SetWidth_Object {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_SetWidth_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   矩形の幅を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_SetWidth_Summary {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_SetWidth_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   幅を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_SetWidth_Width {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_SetWidth_Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   色を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_Value_Color {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_Value_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   高さを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_Value_Height {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_Value_Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   生成された矩形オブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_Value_Object {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_Value_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   矩形オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_Value_Summary {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   幅を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Rectangle_Value_Width {
            get {
                return ResourceManager.GetString("Graphics_Rectangle_Value_Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   子要素です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemoveChild_Child {
            get {
                return ResourceManager.GetString("Graphics_RemoveChild_Child", resourceCulture);
            }
        }
        
        /// <summary>
        ///   親要素です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemoveChild_Parent {
            get {
                return ResourceManager.GetString("Graphics_RemoveChild_Parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ParentからChildを取り除きます に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemoveChild_Summary {
            get {
                return ResourceManager.GetString("Graphics_RemoveChild_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemoveColorFilter_ColorFilter {
            get {
                return ResourceManager.GetString("Graphics_RemoveColorFilter_ColorFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーフィルターを削除します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemoveColorFilter_Summary {
            get {
                return ResourceManager.GetString("Graphics_RemoveColorFilter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象の描画オブジェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemoveFromParent_Child {
            get {
                return ResourceManager.GetString("Graphics_RemoveFromParent_Child", resourceCulture);
            }
        }
        
        /// <summary>
        ///   取り除きます に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemoveFromParent_In {
            get {
                return ResourceManager.GetString("Graphics_RemoveFromParent_In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Childをその親要素から取り除きます に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemoveFromParent_Summary {
            get {
                return ResourceManager.GetString("Graphics_RemoveFromParent_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクリーンフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemovePostScreenFilter_ScreenFilter {
            get {
                return ResourceManager.GetString("Graphics_RemovePostScreenFilter_ScreenFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポストスクリーンフィルターを削除します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemovePostScreenFilter_Summary {
            get {
                return ResourceManager.GetString("Graphics_RemovePostScreenFilter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクリーンフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemovePreScreenFilter_ScreenFilter {
            get {
                return ResourceManager.GetString("Graphics_RemovePreScreenFilter_ScreenFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プレスクリーンフィルターを削除します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_RemovePreScreenFilter_Summary {
            get {
                return ResourceManager.GetString("Graphics_RemovePreScreenFilter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   透過度です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetAlpha_Alpha {
            get {
                return ResourceManager.GetString("Graphics_SetAlpha_Alpha", resourceCulture);
            }
        }
        
        /// <summary>
        ///   透過度を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetAlpha_Summary {
            get {
                return ResourceManager.GetString("Graphics_SetAlpha_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ブレンドを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetBlend_Blend {
            get {
                return ResourceManager.GetString("Graphics_SetBlend_Blend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ブレンドを変更します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetBlend_Summary {
            get {
                return ResourceManager.GetString("Graphics_SetBlend_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   非表示かどうかを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetHidden_Hidden {
            get {
                return ResourceManager.GetString("Graphics_SetHidden_Hidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   非表示を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetHidden_Summary {
            get {
                return ResourceManager.GetString("Graphics_SetHidden_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マスクを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetMask_Mask {
            get {
                return ResourceManager.GetString("Graphics_SetMask_Mask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マスクを変更します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetMask_Summary {
            get {
                return ResourceManager.GetString("Graphics_SetMask_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マスクタイプを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetMaskType_MaskType {
            get {
                return ResourceManager.GetString("Graphics_SetMaskType_MaskType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マスクタイプを変更します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetMaskType_Summary {
            get {
                return ResourceManager.GetString("Graphics_SetMaskType_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   表示位置を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetPosition_Position {
            get {
                return ResourceManager.GetString("Graphics_SetPosition_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   表示位置を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetPosition_Summary {
            get {
                return ResourceManager.GetString("Graphics_SetPosition_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   回転角です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetRotation_Rotation {
            get {
                return ResourceManager.GetString("Graphics_SetRotation_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   回転角を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetRotation_Summary {
            get {
                return ResourceManager.GetString("Graphics_SetRotation_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   回転の中心です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetRotationCenter_RotationCenter {
            get {
                return ResourceManager.GetString("Graphics_SetRotationCenter_RotationCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   回転の中心を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetRotationCenter_Summary {
            get {
                return ResourceManager.GetString("Graphics_SetRotationCenter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   拡大率を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetScale_Scale {
            get {
                return ResourceManager.GetString("Graphics_SetScale_Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   拡大率を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetScale_Summary {
            get {
                return ResourceManager.GetString("Graphics_SetScale_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   拡大の中心です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetScaleCenter_ScaleCenter {
            get {
                return ResourceManager.GetString("Graphics_SetScaleCenter_ScaleCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   拡大の中心を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_SetScaleCenter_Summary {
            get {
                return ResourceManager.GetString("Graphics_SetScaleCenter_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   透過度を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Value_Alpha {
            get {
                return ResourceManager.GetString("Graphics_Value_Alpha", resourceCulture);
            }
        }
        
        /// <summary>
        ///   非表示かどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Value_Hidden {
            get {
                return ResourceManager.GetString("Graphics_Value_Hidden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   表示位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Value_Position {
            get {
                return ResourceManager.GetString("Graphics_Value_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   回転角を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Value_Rotation {
            get {
                return ResourceManager.GetString("Graphics_Value_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   回転の中心位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Value_RotationCenter {
            get {
                return ResourceManager.GetString("Graphics_Value_RotationCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   拡大率を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Value_Scale {
            get {
                return ResourceManager.GetString("Graphics_Value_Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   拡大の中心位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Value_ScaleCenter {
            get {
                return ResourceManager.GetString("Graphics_Value_ScaleCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   画像描画オブジェクトの状態を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Value_Summary {
            get {
                return ResourceManager.GetString("Graphics_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   画像描画オブジェクトを取得、設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Graphics_Value_Value {
            get {
                return ResourceManager.GetString("Graphics_Value_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ホールドの状態が変化したときのイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Hold_Change {
            get {
                return ResourceManager.GetString("Hold_Change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在のホールドのスコアを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Hold_CurrentHoldScore {
            get {
                return ResourceManager.GetString("Hold_CurrentHoldScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ホールドが終了したときのイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Hold_End {
            get {
                return ResourceManager.GetString("Hold_End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ホールドされているマークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Hold_HoldMarks {
            get {
                return ResourceManager.GetString("Hold_HoldMarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最大ホールドが達成されたときのイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Hold_MaxHold {
            get {
                return ResourceManager.GetString("Hold_MaxHold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最大ホールドのスコアを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Hold_MaxHoldBonus {
            get {
                return ResourceManager.GetString("Hold_MaxHoldBonus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ホールドが開始されたときのイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Hold_Start {
            get {
                return ResourceManager.GetString("Hold_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ホールドの情報を扱います に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Hold_Summary {
            get {
                return ResourceManager.GetString("Hold_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   画像の表示する矩形を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_SetRect {
            get {
                return ResourceManager.GetString("Image_SetRect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   高さを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_SetRect_Height {
            get {
                return ResourceManager.GetString("Image_SetRect_Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象の画像描画オブジェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_SetRect_Object {
            get {
                return ResourceManager.GetString("Image_SetRect_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   幅を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_SetRect_Width {
            get {
                return ResourceManager.GetString("Image_SetRect_Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   X方向の位置を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_SetRect_X {
            get {
                return ResourceManager.GetString("Image_SetRect_X", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Y方向の位置を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_SetRect_Y {
            get {
                return ResourceManager.GetString("Image_SetRect_Y", resourceCulture);
            }
        }
        
        /// <summary>
        ///   オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_Value_In {
            get {
                return ResourceManager.GetString("Image_Value_In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   画像の中心を座標の中心にするかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_Value_IsCenter {
            get {
                return ResourceManager.GetString("Image_Value_IsCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   生成されたオブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_Value_Object {
            get {
                return ResourceManager.GetString("Image_Value_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   画像のパスです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_Value_Path {
            get {
                return ResourceManager.GetString("Image_Value_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   初期位置を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_Value_Position {
            get {
                return ResourceManager.GetString("Image_Value_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   画像オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Image_Value_Summary {
            get {
                return ResourceManager.GetString("Image_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ボタンの種類です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Input_Button {
            get {
                return ResourceManager.GetString("Input_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   いかなる入力も扱うかどうかです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Input_HandleAny {
            get {
                return ResourceManager.GetString("Input_HandleAny", resourceCulture);
            }
        }
        
        /// <summary>
        ///   入力があったときのイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Input_Out {
            get {
                return ResourceManager.GetString("Input_Out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   押されているフレームカウントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Input_PressCount {
            get {
                return ResourceManager.GetString("Input_PressCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ボタンが押されたかどうかです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Input_Pressed {
            get {
                return ResourceManager.GetString("Input_Pressed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ボタンが離されたかどうかです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Input_Released {
            get {
                return ResourceManager.GetString("Input_Released", resourceCulture);
            }
        }
        
        /// <summary>
        ///   入力を扱います に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Input_Summary {
            get {
                return ResourceManager.GetString("Input_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   BPMを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_BPM {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_BPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーのマークの位置を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_ColorPosition {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_ColorPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_CurrentTime {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_CurrentTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   優先度の高いノードでHandledがTrueのときにも評価を行うかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_EvaluateRequired {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_EvaluateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーマークの位置決定をハンドルするか設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_Handled {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_Handled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_HasSameTimingMark {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_HasSameTimingMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークがACかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_IsAC {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_IsAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ACFTかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_IsACFT {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_IsACFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークが長押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_IsLong {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_IsLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   右スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_IsRight {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_IsRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_IsScratch {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_IsScratch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのIDを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_MarkID {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_MarkID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーマークの位置を決める時のイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_Out {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_Out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   パラメーター一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_Parameters {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_Position {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   計算が必要になったときに実行されるイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_Position_Out {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_Position_Out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの離す時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_ReleaseTime {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_ReleaseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの回転角を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_Rotation {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しのマークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_SameTimingMarks {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_SameTimingMarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドスケールを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_SlideScale {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_SlideScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_Time {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのタイプを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePos_Type {
            get {
                return ResourceManager.GetString("Mark_CalculatePos_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   いかなるマークの色つきマークの位置を計算します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePosAny_Summary {
            get {
                return ResourceManager.GetString("Mark_CalculatePosAny_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定のIDのマークの色つきマークの位置を計算します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePosByID_Summary {
            get {
                return ResourceManager.GetString("Mark_CalculatePosByID_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のIDです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePosByID_TargetID {
            get {
                return ResourceManager.GetString("Mark_CalculatePosByID_TargetID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   終了の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePosWithinTime_EndTime {
            get {
                return ResourceManager.GetString("Mark_CalculatePosWithinTime_EndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   開始の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePosWithinTime_StartTime {
            get {
                return ResourceManager.GetString("Mark_CalculatePosWithinTime_StartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定の時間の間のマークの色つきマークの位置を計算します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CalculatePosWithinTime_Summary {
            get {
                return ResourceManager.GetString("Mark_CalculatePosWithinTime_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   軸の画像を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_AxisImage {
            get {
                return ResourceManager.GetString("Mark_CreateImage_AxisImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   色つきマークの画像を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_ColorMarkImage {
            get {
                return ResourceManager.GetString("Mark_CreateImage_ColorMarkImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   優先度の高いノードでHandledがTrueのときにも評価を行うかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_EvaluateRequired {
            get {
                return ResourceManager.GetString("Mark_CreateImage_EvaluateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの画像作成をハンドルするか設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_Handled {
            get {
                return ResourceManager.GetString("Mark_CreateImage_Handled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_HasSameTimingMark {
            get {
                return ResourceManager.GetString("Mark_CreateImage_HasSameTimingMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークがACかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_IsAC {
            get {
                return ResourceManager.GetString("Mark_CreateImage_IsAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ACFTかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_IsACFT {
            get {
                return ResourceManager.GetString("Mark_CreateImage_IsACFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークが長押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_IsLong {
            get {
                return ResourceManager.GetString("Mark_CreateImage_IsLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   右スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_IsRight {
            get {
                return ResourceManager.GetString("Mark_CreateImage_IsRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_IsScratch {
            get {
                return ResourceManager.GetString("Mark_CreateImage_IsScratch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのIDを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_MarkID {
            get {
                return ResourceManager.GetString("Mark_CreateImage_MarkID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの画像を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_MarkImage {
            get {
                return ResourceManager.GetString("Mark_CreateImage_MarkImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの画像作成時のイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_Out {
            get {
                return ResourceManager.GetString("Mark_CreateImage_Out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   パラメーター一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_Parameters {
            get {
                return ResourceManager.GetString("Mark_CreateImage_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_Position {
            get {
                return ResourceManager.GetString("Mark_CreateImage_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの離す時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_ReleaseTime {
            get {
                return ResourceManager.GetString("Mark_CreateImage_ReleaseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの回転角を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_Rotation {
            get {
                return ResourceManager.GetString("Mark_CreateImage_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しのマークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_SameTimingMarks {
            get {
                return ResourceManager.GetString("Mark_CreateImage_SameTimingMarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドの色つき画像を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_SlideColorMarkImage {
            get {
                return ResourceManager.GetString("Mark_CreateImage_SlideColorMarkImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドの色なし画像を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_SlideMarkImage {
            get {
                return ResourceManager.GetString("Mark_CreateImage_SlideMarkImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドスケールを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_SlideScale {
            get {
                return ResourceManager.GetString("Mark_CreateImage_SlideScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_Time {
            get {
                return ResourceManager.GetString("Mark_CreateImage_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの軌跡の画像を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_TraceImage {
            get {
                return ResourceManager.GetString("Mark_CreateImage_TraceImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのタイプを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImage_Type {
            get {
                return ResourceManager.GetString("Mark_CreateImage_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   いかなるマークの画像作成をします に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImageAny_Summary {
            get {
                return ResourceManager.GetString("Mark_CreateImageAny_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定のIDのマークの画像作成をします に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImageByID_Summary {
            get {
                return ResourceManager.GetString("Mark_CreateImageByID_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のIDです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImageByID_TargetID {
            get {
                return ResourceManager.GetString("Mark_CreateImageByID_TargetID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   終了の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImageWithinTime_EndTime {
            get {
                return ResourceManager.GetString("Mark_CreateImageWithinTime_EndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   開始の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImageWithinTime_StartTime {
            get {
                return ResourceManager.GetString("Mark_CreateImageWithinTime_StartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定の時間の間のマークの画像作成をします に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_CreateImageWithinTime_Summary {
            get {
                return ResourceManager.GetString("Mark_CreateImageWithinTime_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの角度を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_DynamicCreate_Angle {
            get {
                return ResourceManager.GetString("Mark_DynamicCreate_Angle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの終了時間を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_DynamicCreate_EndTime {
            get {
                return ResourceManager.GetString("Mark_DynamicCreate_EndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークが長押しかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_DynamicCreate_IsLong {
            get {
                return ResourceManager.GetString("Mark_DynamicCreate_IsLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのIDを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_DynamicCreate_MarkID {
            get {
                return ResourceManager.GetString("Mark_DynamicCreate_MarkID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの種類を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_DynamicCreate_MarkType {
            get {
                return ResourceManager.GetString("Mark_DynamicCreate_MarkType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの位置を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_DynamicCreate_Position {
            get {
                return ResourceManager.GetString("Mark_DynamicCreate_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークを動的に生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_DynamicCreate_Summary {
            get {
                return ResourceManager.GetString("Mark_DynamicCreate_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの時間を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_DynamicCreate_Time {
            get {
                return ResourceManager.GetString("Mark_DynamicCreate_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   許可されたボタンの一覧を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_AllowedButtons {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_AllowedButtons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   優先度の高いノードでHandledがTrueのときにも評価を行うかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_EvaluateRequired {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_EvaluateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   許可されたボタンの一覧の決定をハンドルするか設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_Handled {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_Handled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_HasSameTimingMark {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_HasSameTimingMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークがACかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_IsAC {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_IsAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ACFTかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_IsACFT {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_IsACFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークが長押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_IsLong {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_IsLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ミス押しかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_IsMissPress {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_IsMissPress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   右スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_IsRight {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_IsRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_IsScratch {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_IsScratch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのIDを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_MarkID {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_MarkID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   許可されたボタンを決定するかどうかを決める時のイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_Out {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_Out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   パラメーター一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_Parameters {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_Position {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   押されたボタンを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_PressedButton {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_PressedButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの離す時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_ReleaseTime {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_ReleaseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの回転角を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_Rotation {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しのマークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_SameTimingMarks {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_SameTimingMarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドスケールを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_SlideScale {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_SlideScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_Time {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのタイプを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtons_Type {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtons_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   いかなるマークの許可されたボタンの一覧を決定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtonsAny_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtonsAny_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定のIDのマークの許可されたボタンの一覧を決定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtonsByID_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtonsByID_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のIDです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtonsByID_TargetID {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtonsByID_TargetID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   終了の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtonsWithinTime_EndTime {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtonsWithinTime_EndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   開始の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtonsWithinTime_StartTime {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtonsWithinTime_StartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定の時間の間のマークの許可されたボタンの一覧を決定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessAllowedButtonsWithinTime_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessAllowedButtonsWithinTime_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの離す時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvaluate_ReleaseTime {
            get {
                return ResourceManager.GetString("Mark_ProcessEvaluate_ReleaseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   いかなる種類のマークの評価も処理します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvaluateAny_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessEvaluateAny_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定のIDのマークの評価を処理します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvaluateByID_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessEvaluateByID_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のIDです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvaluateByID_TargetID {
            get {
                return ResourceManager.GetString("Mark_ProcessEvaluateByID_TargetID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   終了の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvaluateWithinTime_EndTime {
            get {
                return ResourceManager.GetString("Mark_ProcessEvaluateWithinTime_EndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   開始の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvaluateWithinTime_StartTime {
            get {
                return ResourceManager.GetString("Mark_ProcessEvaluateWithinTime_StartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定の時間の間のマークの色つきマークの評価を処理します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvaluateWithinTime_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessEvaluateWithinTime_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの評価を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_Evaluate {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_Evaluate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   優先度の高いノードでHandledがTrueのときにも評価を行うかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_EvaluateRequired {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_EvaluateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの評価をハンドルするかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_Handled {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_Handled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_HasSameTimingMark {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_HasSameTimingMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークがACかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_IsAC {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_IsAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ACFTかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_IsACFT {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_IsACFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークが長押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_IsLong {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_IsLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   間違って押したかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_IsMissPress {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_IsMissPress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   長押しのリリースかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_IsRelease {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_IsRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   右スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_IsRight {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_IsRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_IsScratch {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_IsScratch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのIDを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_MarkID {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_MarkID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークが評価されたときのイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_Out {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_Out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   パラメーター一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_Parameters {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_Position {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの角度を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_Rotation {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しのマークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_SameTimingMarks {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_SameTimingMarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドスケールを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_SlideScale {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_SlideScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_Time {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessEvalute_Type {
            get {
                return ResourceManager.GetString("Mark_ProcessEvalute_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   BPMを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_BPM {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_BPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   優先度の高いノードでHandledがTrueのときにも評価を行うかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_EvaluateRequired {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_EvaluateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   BPMをハンドルするかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_Handled {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_Handled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_HasSameTimingMark {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_HasSameTimingMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークがACかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_IsAC {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_IsAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ACFTかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_IsACFT {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_IsACFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークが長押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_IsLong {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_IsLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   右スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_IsRight {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_IsRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_IsScratch {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_IsScratch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのIDを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_MarkID {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_MarkID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのBPMが評価されたときのイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_Out {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_Out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   パラメーター一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_Parameters {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_Position {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの離す時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_ReleaseTime {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_ReleaseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの角度を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_Rotation {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しのマークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_SameTimingMarks {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_SameTimingMarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドスケールを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_SlideScale {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_SlideScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_Time {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPM_Type {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPM_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   いかなる種類のマークのBPMも処理します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPMAny_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPMAny_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定のIDのマークのBPMを処理します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPMByID_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPMByID_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のIDです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPMByID_TargetID {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPMByID_TargetID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   終了の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPMWithinTime_EndTime {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPMWithinTime_EndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   開始の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPMWithinTime_StartTime {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPMWithinTime_StartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定の時間の間のマークのBPMを処理します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMarkBPMWithinTime_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessMarkBPMWithinTime_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   優先度の高いノードでHandledがTrueのときにも評価を行うかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_EvaluateRequired {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_EvaluateRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ミス押しかどうかの決定をハンドルするか設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_Handled {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_Handled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_HasSameTimingMark {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_HasSameTimingMark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークがACかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_IsAC {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_IsAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ACFTかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_IsACFT {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_IsACFT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークが長押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_IsLong {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_IsLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ミス押しかどうかを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_IsMissPress {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_IsMissPress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   右スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_IsRight {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_IsRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクラッチかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_IsScratch {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_IsScratch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのIDを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_MarkID {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_MarkID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ミス押しかどうかを決める時のイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_Out {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_Out", resourceCulture);
            }
        }
        
        /// <summary>
        ///   パラメーター一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_Parameters {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_Position {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   押されたボタンを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_PressedButton {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_PressedButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの離す時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_ReleaseTime {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_ReleaseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの回転角を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_Rotation {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   同時押しのマークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_SameTimingMarks {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_SameTimingMarks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スライドスケールを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_SlideScale {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_SlideScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_Time {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのタイプを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPress_Type {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPress_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   いかなるマークの色つきマークのミス押しかどうかを決定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPressAny_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPressAny_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定のIDのマークの色つきマークのミス押しかどうかを決定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPressByID_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPressByID_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のIDです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPressByID_TargetID {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPressByID_TargetID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   終了の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPressWithinTime_EndTime {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPressWithinTime_EndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   開始の時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPressWithinTime_StartTime {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPressWithinTime_StartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   特定の時間の間のマークの色つきマークのミス押しかどうかを決定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_ProcessMissPressWithinTime_Summary {
            get {
                return ResourceManager.GetString("Mark_ProcessMissPressWithinTime_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの角度を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_Angle {
            get {
                return ResourceManager.GetString("Mark_Reader_Angle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ストリームを全て読み取ったかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_EndOfStream {
            get {
                return ResourceManager.GetString("Mark_Reader_EndOfStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの終了時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_EndTime {
            get {
                return ResourceManager.GetString("Mark_Reader_EndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークが長押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_IsLong {
            get {
                return ResourceManager.GetString("Mark_Reader_IsLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのIDを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_MarkID {
            get {
                return ResourceManager.GetString("Mark_Reader_MarkID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_MarkType {
            get {
                return ResourceManager.GetString("Mark_Reader_MarkType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   次のマークの情報を読み取ります に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_Next {
            get {
                return ResourceManager.GetString("Mark_Reader_Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_Position {
            get {
                return ResourceManager.GetString("Mark_Reader_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   読み取り先のストリームを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_Stream {
            get {
                return ResourceManager.GetString("Mark_Reader_Stream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   PPDのマークデータをストリームから読み取ります に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_Summary {
            get {
                return ResourceManager.GetString("Mark_Reader_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Reader_Time {
            get {
                return ResourceManager.GetString("Mark_Reader_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   IDを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Value_ID {
            get {
                return ResourceManager.GetString("Mark_Value_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   長押しかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Value_IsLong {
            get {
                return ResourceManager.GetString("Mark_Value_IsLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   パラメーターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Value_Parameters {
            get {
                return ResourceManager.GetString("Mark_Value_Parameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   位置を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Value_Position {
            get {
                return ResourceManager.GetString("Mark_Value_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   離す時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Value_ReleaseTime {
            get {
                return ResourceManager.GetString("Mark_Value_ReleaseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   角度を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Value_Rotation {
            get {
                return ResourceManager.GetString("Mark_Value_Rotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの情報を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Value_Summary {
            get {
                return ResourceManager.GetString("Mark_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Value_Time {
            get {
                return ResourceManager.GetString("Mark_Value_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークのタイプを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Value_Type {
            get {
                return ResourceManager.GetString("Mark_Value_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のマークを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mark_Value_Value {
            get {
                return ResourceManager.GetString("Mark_Value_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MarkType_Value_Summary {
            get {
                return ResourceManager.GetString("MarkType_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   マークの種類を取得、設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MarkType_Value_Value {
            get {
                return ResourceManager.GetString("MarkType_Value_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   デフォルト値を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_AddSetting_Default {
            get {
                return ResourceManager.GetString("Mod_AddSetting_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   説明を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_AddSetting_Description {
            get {
                return ResourceManager.GetString("Mod_AddSetting_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   表示名を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_AddSetting_DisplayName {
            get {
                return ResourceManager.GetString("Mod_AddSetting_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   設定を追加します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_AddSetting_In {
            get {
                return ResourceManager.GetString("Mod_AddSetting_In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   キーを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_AddSetting_Key {
            get {
                return ResourceManager.GetString("Mod_AddSetting_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最大値を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_AddSetting_Max {
            get {
                return ResourceManager.GetString("Mod_AddSetting_Max", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最大長を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_AddSetting_MaxLength {
            get {
                return ResourceManager.GetString("Mod_AddSetting_MaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最小値を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_AddSetting_Min {
            get {
                return ResourceManager.GetString("Mod_AddSetting_Min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ユーザーが設定可能なデータを追加します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_AddSetting_Summary {
            get {
                return ResourceManager.GetString("Mod_AddSetting_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   自身のMod情報を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_Current_Summary {
            get {
                return ResourceManager.GetString("Mod_Current_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   自身のMod情報を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_Current_Value {
            get {
                return ResourceManager.GetString("Mod_Current_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Modの設定の初期化を行うイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_EntryPoint_Start {
            get {
                return ResourceManager.GetString("Mod_EntryPoint_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Modの設定のエントリーポイントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_EntryPoint_Summary {
            get {
                return ResourceManager.GetString("Mod_EntryPoint_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   取得する設定のキーを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_GetSetting_Key {
            get {
                return ResourceManager.GetString("Mod_GetSetting_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Modの設定を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_GetSetting_Summary {
            get {
                return ResourceManager.GetString("Mod_GetSetting_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   設定を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_GetSetting_Value {
            get {
                return ResourceManager.GetString("Mod_GetSetting_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Modの作者名を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_ModInfo_Value_AuthorName {
            get {
                return ResourceManager.GetString("Mod_ModInfo_Value_AuthorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Modの表示名を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_ModInfo_Value_DisplayName {
            get {
                return ResourceManager.GetString("Mod_ModInfo_Value_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Modのファイル名を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_ModInfo_Value_FileName {
            get {
                return ResourceManager.GetString("Mod_ModInfo_Value_FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Mod情報の詳細を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_ModInfo_Value_Summary {
            get {
                return ResourceManager.GetString("Mod_ModInfo_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   詳細を取得するModを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_ModInfo_Value_Value {
            get {
                return ResourceManager.GetString("Mod_ModInfo_Value_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用しているModの一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_UsingMods_Mods {
            get {
                return ResourceManager.GetString("Mod_UsingMods_Mods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   使用しているModの一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Mod_UsingMods_Summary {
            get {
                return ResourceManager.GetString("Mod_UsingMods_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   リザルトに影響を及ぼすノードのためModの場合サーバーランキング非対応になります に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ModifyDataWarning {
            get {
                return ResourceManager.GetString("ModifyDataWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の動画の時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MovieTime_Summary {
            get {
                return ResourceManager.GetString("MovieTime_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の動画の時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MovieTime_Time {
            get {
                return ResourceManager.GetString("MovieTime_Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   表示位置を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Multi_Item_SetPosition_Position {
            get {
                return ResourceManager.GetString("Multi_Item_SetPosition_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   アイテムの表示位置を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Multi_Item_SetPosition_Summary {
            get {
                return ResourceManager.GetString("Multi_Item_SetPosition_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   設定する数値を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Number_SetNumber_Number {
            get {
                return ResourceManager.GetString("Number_SetNumber_Number", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のオブジェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Number_SetNumber_Object {
            get {
                return ResourceManager.GetString("Number_SetNumber_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   表示する数値を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Number_SetNumber_Summary {
            get {
                return ResourceManager.GetString("Number_SetNumber_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   配置方法を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Number_Value_Alignment {
            get {
                return ResourceManager.GetString("Number_Value_Alignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Number_Value_In {
            get {
                return ResourceManager.GetString("Number_Value_In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   表示する最大の桁数を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Number_Value_MaxDigit {
            get {
                return ResourceManager.GetString("Number_Value_MaxDigit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   生成されたオブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Number_Value_Object {
            get {
                return ResourceManager.GetString("Number_Value_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   画像のパスです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Number_Value_Path {
            get {
                return ResourceManager.GetString("Number_Value_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   初期位置を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Number_Value_Position {
            get {
                return ResourceManager.GetString("Number_Value_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   0-9までの均一に並んだ画像を元に数字を描画するオブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Number_Value_Summary {
            get {
                return ResourceManager.GetString("Number_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポーズされたときのイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Pause_Paused_Summary {
            get {
                return ResourceManager.GetString("Pause_Paused_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   再開されたときのイベントです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Pause_Resumed_Summary {
            get {
                return ResourceManager.GetString("Pause_Resumed_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポーズ処理を扱います に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Pause_Summary {
            get {
                return ResourceManager.GetString("Pause_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポリゴン表示オブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_ActualTextureCoordinates_Object {
            get {
                return ResourceManager.GetString("Polygon_ActualTextureCoordinates_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   パッキングされたテクスチャ座標を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_ActualTextureCoordinates_Summary {
            get {
                return ResourceManager.GetString("Polygon_ActualTextureCoordinates_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   テクスチャ座標です。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_ActualTextureCoordinates_TextureCoordinates {
            get {
                return ResourceManager.GetString("Polygon_ActualTextureCoordinates_TextureCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   変換したテクスチャ座標です。 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_ActualTextureCoordinates_Value {
            get {
                return ResourceManager.GetString("Polygon_ActualTextureCoordinates_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポリゴン表示オブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetPrimitiveCount_Object {
            get {
                return ResourceManager.GetString("Polygon_SetPrimitiveCount_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プリミティブの数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetPrimitiveCount_PrimitiveCount {
            get {
                return ResourceManager.GetString("Polygon_SetPrimitiveCount_PrimitiveCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プリミティブ数を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetPrimitiveCount_Summary {
            get {
                return ResourceManager.GetString("Polygon_SetPrimitiveCount_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポリゴン表示オブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetPrimitiveType_Object {
            get {
                return ResourceManager.GetString("Polygon_SetPrimitiveType_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プリミティブタイプです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetPrimitiveType_PrimitiveType {
            get {
                return ResourceManager.GetString("Polygon_SetPrimitiveType_PrimitiveType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プリミティブタイプを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetPrimitiveType_Summary {
            get {
                return ResourceManager.GetString("Polygon_SetPrimitiveType_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポリゴン表示オブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetStartIndex_Object {
            get {
                return ResourceManager.GetString("Polygon_SetStartIndex_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点バッファーのオフセットです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetStartIndex_StartIndex {
            get {
                return ResourceManager.GetString("Polygon_SetStartIndex_StartIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点バッファーのオフセットを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetStartIndex_Summary {
            get {
                return ResourceManager.GetString("Polygon_SetStartIndex_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポリゴン表示オブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetVertexCount_Object {
            get {
                return ResourceManager.GetString("Polygon_SetVertexCount_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   表示に使う頂点数を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetVertexCount_Summary {
            get {
                return ResourceManager.GetString("Polygon_SetVertexCount_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   表示に使う頂点数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_SetVertexCount_VertexCount {
            get {
                return ResourceManager.GetString("Polygon_SetVertexCount_VertexCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   生成されたオブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_Value_Object {
            get {
                return ResourceManager.GetString("Polygon_Value_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   画像のパスです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_Value_Path {
            get {
                return ResourceManager.GetString("Polygon_Value_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プリミティブ数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_Value_PrimitiveCount {
            get {
                return ResourceManager.GetString("Polygon_Value_PrimitiveCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プリミティブタイプです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_Value_PrimitiveType {
            get {
                return ResourceManager.GetString("Polygon_Value_PrimitiveType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点バッファーのオフセットです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_Value_StartIndex {
            get {
                return ResourceManager.GetString("Polygon_Value_StartIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ポリゴン表示オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_Value_Summary {
            get {
                return ResourceManager.GetString("Polygon_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点バッファーです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_Value_VertexBuffer {
            get {
                return ResourceManager.GetString("Polygon_Value_VertexBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   表示に使う頂点数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Polygon_Value_VertexCount {
            get {
                return ResourceManager.GetString("Polygon_Value_VertexCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   トレースログを吐きます に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string PPD_Debug_Trace {
            get {
                return ResourceManager.GetString("PPD_Debug_Trace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   トレースのテキストを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string PPD_Debug_Trace_Text {
            get {
                return ResourceManager.GetString("PPD_Debug_Trace_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   リソースを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Resource_Value {
            get {
                return ResourceManager.GetString("Resource_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   リソース名を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Resource_Value_Path {
            get {
                return ResourceManager.GetString("Resource_Value_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   取得したリソースです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Resource_Value_Value {
            get {
                return ResourceManager.GetString("Resource_Value_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   キーです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScoreStorage_Contains_Key {
            get {
                return ResourceManager.GetString("ScoreStorage_Contains_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   譜面ストレージにキーが含まれるかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScoreStorage_Contains_Summary {
            get {
                return ResourceManager.GetString("ScoreStorage_Contains_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   キーが含まれるかどうかです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScoreStorage_Contains_Value {
            get {
                return ResourceManager.GetString("ScoreStorage_Contains_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   キーです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScoreStorage_Get_Key {
            get {
                return ResourceManager.GetString("ScoreStorage_Get_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   譜面ストレージから値を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScoreStorage_Get_Summary {
            get {
                return ResourceManager.GetString("ScoreStorage_Get_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   値です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScoreStorage_Get_Value {
            get {
                return ResourceManager.GetString("ScoreStorage_Get_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   キーです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScoreStorage_Set_Key {
            get {
                return ResourceManager.GetString("ScoreStorage_Set_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   譜面ストレージに値を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScoreStorage_Set_Summary {
            get {
                return ResourceManager.GetString("ScoreStorage_Set_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   値です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScoreStorage_Set_Value {
            get {
                return ResourceManager.GetString("ScoreStorage_Set_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のカラーフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Color_Add_ColorFilter {
            get {
                return ResourceManager.GetString("ScreenFilter_Color_Add_ColorFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーフィルターを追加します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Color_Add_Summary {
            get {
                return ResourceManager.GetString("ScreenFilter_Color_Add_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のカラーフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Color_Insert_ColorFilter {
            get {
                return ResourceManager.GetString("ScreenFilter_Color_Insert_ColorFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   挿入するインデックスを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Color_Insert_Index {
            get {
                return ResourceManager.GetString("ScreenFilter_Color_Insert_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーフィルターを挿入します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Color_Insert_Summary {
            get {
                return ResourceManager.GetString("ScreenFilter_Color_Insert_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のカラーフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Color_Remove_ColorFilter {
            get {
                return ResourceManager.GetString("ScreenFilter_Color_Remove_ColorFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Color_Remove_Filter {
            get {
                return ResourceManager.GetString("ScreenFilter_Color_Remove_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   カラーフィルターを削除します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Color_Remove_Summary {
            get {
                return ResourceManager.GetString("ScreenFilter_Color_Remove_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Color_Value_Filter {
            get {
                return ResourceManager.GetString("ScreenFilter_Color_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スクリーンカラーフィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Color_Value_Summary {
            get {
                return ResourceManager.GetString("ScreenFilter_Color_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   分散を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Gaussian_SetDisperson_Disperson {
            get {
                return ResourceManager.GetString("ScreenFilter_Gaussian_SetDisperson_Disperson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のフィルターを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Gaussian_SetDisperson_Filter {
            get {
                return ResourceManager.GetString("ScreenFilter_Gaussian_SetDisperson_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   分散を変更します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Gaussian_SetDisperson_Summary {
            get {
                return ResourceManager.GetString("ScreenFilter_Gaussian_SetDisperson_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   分散を設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Gaussian_Value_Disperson {
            get {
                return ResourceManager.GetString("ScreenFilter_Gaussian_Value_Disperson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   フィルターを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Gaussian_Value_Filter {
            get {
                return ResourceManager.GetString("ScreenFilter_Gaussian_Value_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ガウシアンフィルターです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ScreenFilter_Gaussian_Value_Summary {
            get {
                return ResourceManager.GetString("ScreenFilter_Gaussian_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   全ての長押しマークの数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_AllLongMarkCount {
            get {
                return ResourceManager.GetString("Song_Info_AllLongMarkCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   全てのマークの数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_AllMarkCount {
            get {
                return ResourceManager.GetString("Song_Info_AllMarkCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   譜面作者名を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_AuthorName {
            get {
                return ResourceManager.GetString("Song_Info_AuthorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   BPMを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_BPM {
            get {
                return ResourceManager.GetString("Song_Info_BPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   難易度を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_Difficulty {
            get {
                return ResourceManager.GetString("Song_Info_Difficulty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   難易度ptの平均値を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_DifficultyPointAverage {
            get {
                return ResourceManager.GetString("Song_Info_DifficultyPointAverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   難易度ptのピーク値を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_DifficultyPointPeak {
            get {
                return ResourceManager.GetString("Song_Info_DifficultyPointPeak", resourceCulture);
            }
        }
        
        /// <summary>
        ///   難易度の文字列を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_DifficultyString {
            get {
                return ResourceManager.GetString("Song_Info_DifficultyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   終了時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_EndTime {
            get {
                return ResourceManager.GetString("Song_Info_EndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   五つ同時押しのマークの数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_FiveMarkCount {
            get {
                return ResourceManager.GetString("Song_Info_FiveMarkCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   四つ同時押しのマークの数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_FourMarkCount {
            get {
                return ResourceManager.GetString("Song_Info_FourMarkCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   オートかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_IsAuto {
            get {
                return ResourceManager.GetString("Song_Info_IsAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   コネクトかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_IsConnect {
            get {
                return ResourceManager.GetString("Song_Info_IsConnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   デバッグモードかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_IsDebug {
            get {
                return ResourceManager.GetString("Song_Info_IsDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ゴッドモードかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_IsGodMode {
            get {
                return ResourceManager.GetString("Song_Info_IsGodMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   効果音なしかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_IsMuteSE {
            get {
                return ResourceManager.GetString("Song_Info_IsMuteSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ランダムかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_IsRandom {
            get {
                return ResourceManager.GetString("Song_Info_IsRandom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   標準モード（記録が残るモード）かどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_IsRegular {
            get {
                return ResourceManager.GetString("Song_Info_IsRegular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   生のマーク情報です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_Marks {
            get {
                return ResourceManager.GetString("Song_Info_Marks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   譜面のノーツの種類を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_NoteType {
            get {
                return ResourceManager.GetString("Song_Info_NoteType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   優先度はACFT&gt;AC&gt;Normalの順です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_NoteType_Remark {
            get {
                return ResourceManager.GetString("Song_Info_NoteType_Remark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   単押しのマークの数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_OneMarkCount {
            get {
                return ResourceManager.GetString("Song_Info_OneMarkCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   六つ同時押しのマークの数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_SixMarkCount {
            get {
                return ResourceManager.GetString("Song_Info_SixMarkCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   譜面名を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_SongName {
            get {
                return ResourceManager.GetString("Song_Info_SongName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スピードの倍率を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_SpeedScale {
            get {
                return ResourceManager.GetString("Song_Info_SpeedScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   開始時間を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_StartTime {
            get {
                return ResourceManager.GetString("Song_Info_StartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   譜面の情報、プレイ環境を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_Summary {
            get {
                return ResourceManager.GetString("Song_Info_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   三つ同時押しのマークの数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_ThreeMarkCount {
            get {
                return ResourceManager.GetString("Song_Info_ThreeMarkCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   二つ同時押しのマークの数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Info_TwoMarkCount {
            get {
                return ResourceManager.GetString("Song_Info_TwoMarkCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   全ての難易度のクリアの回数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_AllClearCount {
            get {
                return ResourceManager.GetString("Song_InfoEx_AllClearCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   全ての難易度のプレイ回数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_AllPlayCount {
            get {
                return ResourceManager.GetString("Song_InfoEx_AllPlayCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度の最高の精度（0~1)を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_BestPerformance {
            get {
                return ResourceManager.GetString("Song_InfoEx_BestPerformance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度の最高の精度を記録したときのCOOLの回数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_BestPerformanceCoolCount {
            get {
                return ResourceManager.GetString("Song_InfoEx_BestPerformanceCoolCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度の最高の精度を記録したときのGOODの回数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_BestPerformanceGoodCount {
            get {
                return ResourceManager.GetString("Song_InfoEx_BestPerformanceGoodCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度の最高の精度を記録したときのSADの回数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_BestPerformanceSadCount {
            get {
                return ResourceManager.GetString("Song_InfoEx_BestPerformanceSadCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度の最高の精度を記録したときのSAFEの回数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_BestPerformanceSafeCount {
            get {
                return ResourceManager.GetString("Song_InfoEx_BestPerformanceSafeCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度の最高の精度を記録したときのスコアを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_BestPerformanceScore {
            get {
                return ResourceManager.GetString("Song_InfoEx_BestPerformanceScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度の最高の精度を記録したときのWORSTの回数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_BestPerformanceWorstCount {
            get {
                return ResourceManager.GetString("Song_InfoEx_BestPerformanceWorstCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度の最高のスコアを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_BestScore {
            get {
                return ResourceManager.GetString("Song_InfoEx_BestScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度のクリアの回数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_ClearCount {
            get {
                return ResourceManager.GetString("Song_InfoEx_ClearCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   全ての難易度で初回プレイかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_IsAllFirstPlay {
            get {
                return ResourceManager.GetString("Song_InfoEx_IsAllFirstPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度で初回プレイかどうかを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_IsFirstPlay {
            get {
                return ResourceManager.GetString("Song_InfoEx_IsFirstPlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   現在の難易度のプレイ回数を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_PlayCount {
            get {
                return ResourceManager.GetString("Song_InfoEx_PlayCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   リザルト一覧を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_Results {
            get {
                return ResourceManager.GetString("Song_InfoEx_Results", resourceCulture);
            }
        }
        
        /// <summary>
        ///   譜面のプレイ状況を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_InfoEx_Summary {
            get {
                return ResourceManager.GetString("Song_InfoEx_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   歌詞を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Lyrics_Summary {
            get {
                return ResourceManager.GetString("Song_Lyrics_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   歌詞です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Lyrics_Value {
            get {
                return ResourceManager.GetString("Song_Lyrics_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   COOLの数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_CoolCount {
            get {
                return ResourceManager.GetString("Song_Result_Value_CoolCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   難易度です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_Difficulty {
            get {
                return ResourceManager.GetString("Song_Result_Value_Difficulty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   終了時間です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_FinishTime {
            get {
                return ResourceManager.GetString("Song_Result_Value_FinishTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   GOODの数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_GoodCount {
            get {
                return ResourceManager.GetString("Song_Result_Value_GoodCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   リザルトのIDです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_ID {
            get {
                return ResourceManager.GetString("Song_Result_Value_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   最大コンボ数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_MaxCombo {
            get {
                return ResourceManager.GetString("Song_Result_Value_MaxCombo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   プレイ日時です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_PlayDateTime {
            get {
                return ResourceManager.GetString("Song_Result_Value_PlayDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   結果です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_ResultType {
            get {
                return ResourceManager.GetString("Song_Result_Value_ResultType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SADの数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_SadCount {
            get {
                return ResourceManager.GetString("Song_Result_Value_SadCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SAFEの数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_SafeCount {
            get {
                return ResourceManager.GetString("Song_Result_Value_SafeCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   スコアです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_Score {
            get {
                return ResourceManager.GetString("Song_Result_Value_Score", resourceCulture);
            }
        }
        
        /// <summary>
        ///   リザルトの情報を取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_Summary {
            get {
                return ResourceManager.GetString("Song_Result_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のリザルトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_Value {
            get {
                return ResourceManager.GetString("Song_Result_Value_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   WORSTの数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Song_Result_Value_WorstCount {
            get {
                return ResourceManager.GetString("Song_Result_Value_WorstCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   サウンドを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sound_Object {
            get {
                return ResourceManager.GetString("Sound_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   サウンドを再生します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sound_Play_Summary {
            get {
                return ResourceManager.GetString("Sound_Play_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   再生するサウンドを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sound_PlayWithVolume_Object {
            get {
                return ResourceManager.GetString("Sound_PlayWithVolume_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   音量を指定してサウンドを再生します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sound_PlayWithVolume_Summary {
            get {
                return ResourceManager.GetString("Sound_PlayWithVolume_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   音量を指定します(最大0, 最小-10000) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sound_PlayWithVolume_Volume {
            get {
                return ResourceManager.GetString("Sound_PlayWithVolume_Volume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   サウンドを停止します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sound_Stop_Summary {
            get {
                return ResourceManager.GetString("Sound_Stop_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sound_Value_In {
            get {
                return ResourceManager.GetString("Sound_Value_In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   生成されたオブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sound_Value_Object {
            get {
                return ResourceManager.GetString("Sound_Value_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   サウンドのパスです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sound_Value_Path {
            get {
                return ResourceManager.GetString("Sound_Value_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   サウンドオブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sound_Value_Summary {
            get {
                return ResourceManager.GetString("Sound_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のボタンを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SoundManager_Play_Button {
            get {
                return ResourceManager.GetString("SoundManager_Play_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のサウンドのインデックスを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SoundManager_Play_Index {
            get {
                return ResourceManager.GetString("SoundManager_Play_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   サウンドマネージャーに設定されたサウンドを再生します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SoundManager_Play_Summary {
            get {
                return ResourceManager.GetString("SoundManager_Play_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   再生時の音量を設定します(最大0, 最小-10000) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SoundManager_Play_Volume {
            get {
                return ResourceManager.GetString("SoundManager_Play_Volume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のボタンを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SoundManager_Stop_Button {
            get {
                return ResourceManager.GetString("SoundManager_Stop_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   対象のサウンドのインデックスを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SoundManager_Stop_Index {
            get {
                return ResourceManager.GetString("SoundManager_Stop_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   サウンドマネージャーに設定されたサウンドを停止します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SoundManager_Stop_Summary {
            get {
                return ResourceManager.GetString("SoundManager_Stop_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sprite_Value_In {
            get {
                return ResourceManager.GetString("Sprite_Value_In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   生成されたオブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sprite_Value_Object {
            get {
                return ResourceManager.GetString("Sprite_Value_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   自身は何も表示しない描画オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Sprite_Value_Summary {
            get {
                return ResourceManager.GetString("Sprite_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   レイヤーの種類を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string StageObject_Layer {
            get {
                return ResourceManager.GetString("StageObject_Layer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ステージのオブジェクトを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string StageObject_Summary {
            get {
                return ResourceManager.GetString("StageObject_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   オブジェクトを取得します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string StageObject_Value {
            get {
                return ResourceManager.GetString("StageObject_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ターゲットのタイプを調べます に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TemplateIsType_Summary {
            get {
                return ResourceManager.GetString("TemplateIsType_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ターゲットです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TemplateIsType_Target {
            get {
                return ResourceManager.GetString("TemplateIsType_Target", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ターゲットがタイプであったかどうかです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TemplateIsType_Value {
            get {
                return ResourceManager.GetString("TemplateIsType_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   値を作成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TemplateStruct_Summary {
            get {
                return ResourceManager.GetString("TemplateStruct_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   値です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TemplateStruct_Value {
            get {
                return ResourceManager.GetString("TemplateStruct_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   テキストオブジェクトを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Text_SetText_Object {
            get {
                return ResourceManager.GetString("Text_SetText_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   テキストを設定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Text_SetText_Summary {
            get {
                return ResourceManager.GetString("Text_SetText_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   テキストを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Text_SetText_Text {
            get {
                return ResourceManager.GetString("Text_SetText_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   色を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Text_Value_Color {
            get {
                return ResourceManager.GetString("Text_Value_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   文字列の高さを指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Text_Value_Height {
            get {
                return ResourceManager.GetString("Text_Value_Height", resourceCulture);
            }
        }
        
        /// <summary>
        ///   オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Text_Value_In {
            get {
                return ResourceManager.GetString("Text_Value_In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   生成されたオブジェクトです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Text_Value_Object {
            get {
                return ResourceManager.GetString("Text_Value_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   初期位置を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Text_Value_Position {
            get {
                return ResourceManager.GetString("Text_Value_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   文字列表示オブジェクトを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Text_Value_Summary {
            get {
                return ResourceManager.GetString("Text_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   文字列を指定します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Text_Value_Text {
            get {
                return ResourceManager.GetString("Text_Value_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点色です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Vertex_FromElement_Color {
            get {
                return ResourceManager.GetString("Vertex_FromElement_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点の位置です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Vertex_FromElement_Position {
            get {
                return ResourceManager.GetString("Vertex_FromElement_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点情報を生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Vertex_FromElement_Summary {
            get {
                return ResourceManager.GetString("Vertex_FromElement_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   テクスチャ座標です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Vertex_FromElement_TextureCoordinates {
            get {
                return ResourceManager.GetString("Vertex_FromElement_TextureCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点情報です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Vertex_FromElement_Value {
            get {
                return ResourceManager.GetString("Vertex_FromElement_Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点色です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Vertex_Value_Color {
            get {
                return ResourceManager.GetString("Vertex_Value_Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点の位置です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Vertex_Value_Position {
            get {
                return ResourceManager.GetString("Vertex_Value_Position", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点情報です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Vertex_Value_Summary {
            get {
                return ResourceManager.GetString("Vertex_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   テクスチャ座標です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Vertex_Value_TextureCoordinates {
            get {
                return ResourceManager.GetString("Vertex_Value_TextureCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点バッファーです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string VertexBuffer_Value_Object {
            get {
                return ResourceManager.GetString("VertexBuffer_Value_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点バッファーを生成します に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string VertexBuffer_Value_Summary {
            get {
                return ResourceManager.GetString("VertexBuffer_Value_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点数です に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string VertexBuffer_Value_VertexCount {
            get {
                return ResourceManager.GetString("VertexBuffer_Value_VertexCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点バッファーです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string VertexBuffer_Write_Object {
            get {
                return ResourceManager.GetString("VertexBuffer_Write_Object", resourceCulture);
            }
        }
        
        /// <summary>
        ///   書き込みのオフセットです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string VertexBuffer_Write_Offset {
            get {
                return ResourceManager.GetString("VertexBuffer_Write_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点バッファーに頂点情報を書き込みます に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string VertexBuffer_Write_Summary {
            get {
                return ResourceManager.GetString("VertexBuffer_Write_Summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   頂点情報のシーケンスです に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string VertexBuffer_Write_Vertices {
            get {
                return ResourceManager.GetString("VertexBuffer_Write_Vertices", resourceCulture);
            }
        }
    }
}
